% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_for_logical.R
\name{check_for_logical}
\alias{check_for_logical}
\title{Check for a logical test}
\usage{
check_for_logical(
  .dataset,
  uuid_var = "_uuid",
  variables_to_add = NULL,
  check_id = "logical_xx",
  check_to_perform,
  variables_to_clean = NULL,
  description
)
}
\arguments{
\item{uuid_var}{string variable with the name of uuid column}

\item{variables_to_add}{string vector optional, if to add some information to the log (today, vilagge)}

\item{check_id}{name of the check to perform}

\item{check_to_perform}{test to perform as R code (in text format)}

\item{variables_to_clean}{variables to be put in the log. if not provided, it will try to detect variables}

\item{description}{description of the check performed}

\item{a}{dataset to be check as a dataframe or a list with the
dataframe stored as "checked_dataset"}
}
\value{
return a list with the dataset checked stored as checked_dataset, it will have all
a column added with the check_id  and a dataframe with the logical check log.
}
\description{
Check for a logical test
}
\examples{
test_data <- data.frame(uuid = c(1:10) \%>\% as.character(),
                        today = rep("2023-01-01", 10),
                        location = rep(c("villageA", "villageB"),5),
                        distance_to_market = c(rep("less_30", 5), rep("more_30",5)),
                        access_to_market = c(rep("yes",4), rep("no",6)),
                        number_children_05 = c(rep(c(0,1),4),5,6))

check_for_logical(test_data,
                  uuid_var = "uuid",
                  check_id = "my_test",
                  check_to_perform = "distance_to_market == \"less_30\" & access_to_market == \"no\"",
                  variables_to_clean = "distance_to_market, access_to_market",
                  description = "distance to market less than 30 and no access")

check_for_logical(test_data,
                  uuid_var = "uuid",
                  variables_to_add = c("today", "location"),
                  check_to_perform = "distance_to_market == \"less_30\" & access_to_market == \"no\"",
                  variables_to_clean = "distance_to_market, access_to_market",
                  description = "distance to market less than 30 and no access")
}
