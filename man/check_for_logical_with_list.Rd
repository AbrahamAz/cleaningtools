% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_for_logical.R
\name{check_for_logical_with_list}
\alias{check_for_logical_with_list}
\title{Check several logical test}
\usage{
check_for_logical_with_list(
  .dataset,
  uuid_var = "_uuid",
  variables_to_add = NULL,
  list_of_check,
  check_id_column,
  check_to_perform_column,
  variables_to_clean_column,
  description_column,
  bind_checks = TRUE
)
}
\arguments{
\item{uuid_var}{string variable with the name of uuid column}

\item{variables_to_add}{string vector optional, if to add some information to the log (today, vilagge)}

\item{list_of_check}{a dataframe with the checks to perform}

\item{check_id_column}{the column name with the names of each test.}

\item{check_to_perform_column}{the column name with the checks to perform as R code (in text format)}

\item{variables_to_clean_column}{the column name with the variables to be put in the log.}

\item{description_column}{the column name with the description}

\item{bind_checks}{default is TRUE, to bind the checks into 1 log.}

\item{a}{dataset to be check as a dataframe or a list with the
dataframe stored as "checked_dataset"}
}
\value{
return a list with the dataset checked stored as checked_dataset, it will have all
a column added with the check_id  and a dataframe with the logical check log.
}
\description{
This is a wrapper around check_for_logical to allow several checks to be performed.
}
\examples{
test_data <- data.frame(uuid = c(1:10) \%>\% as.character(),
                        distance_to_market = rep(c("less_30","more_30"),5),
                        access_to_market = c(rep("yes",4), rep("no",6)),
                        number_children_05 = c(rep(c(0,1),4),5,6),
                        number_children_618 = c(rep(c(0,1),4),5,6))
check_list <- data.frame(name = c("logical_xx", "logical_yy", "logical_zz"),
                         check = c("distance_to_market == \"less_30\" & access_to_market == \"no\"",
                                   "number_children_05 > 3",
                                   "rowSums(across(starts_with(\"number\")), na.rm = T) > 9"),
                         description = c("distance to market less than 30 and no access",
                                         "number of children under 5 seems high",
                                         "number of children very high"),
                         variables_to_clean = c("distance_to_market, access_to_market",
                                                "number_children_05",
                                                ""))
check_for_logical_with_list(test_data,
                            uuid_var = "uuid",
                            list_of_check = check_list,
                            check_id_column = "name",
                            check_to_perform_column = "check",
                            variables_to_clean_column = "variables_to_clean",
                            description_column = "description")
}
